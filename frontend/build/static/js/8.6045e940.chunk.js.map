{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","padding","to","id","process","name","placeCount","UsersList","items","length","map","user","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","resData","users","fetchUser","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,sBAYeA,IARF,SAACC,GACb,OACC,qBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAxD,SACEF,EAAMG,a,oOCSKC,EAZA,SAACJ,GACf,OACC,qBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAA1D,SACC,qBACCG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,QCqBhCE,EAxBE,SAACV,GACjB,OACC,oBAAIC,UAAU,YAAd,SACC,cAACF,EAAA,EAAD,CAAME,UAAU,qBAAqBC,MAAO,CAAES,QAAS,GAAvD,SACC,eAAC,IAAD,CAAMC,GAAE,WAAMZ,EAAMa,GAAZ,WAAR,UACC,qBAAKZ,UAAU,mBAAf,SACC,cAAC,EAAD,CACCK,MAAK,UAAKQ,wBAAL,YAAwCd,EAAMM,OACnDC,IAAKP,EAAMe,SAGb,sBAAKd,UAAU,kBAAf,UACC,6BAAKD,EAAMe,OACX,+BACEf,EAAMgB,WAAY,IACG,IAArBhB,EAAMgB,WAAmB,QAAU,uBCS5BC,EAzBG,SAACjB,GAClB,OAA2B,IAAvBA,EAAMkB,MAAMC,OAEd,qBAAKlB,UAAU,SAAf,SACC,cAACF,EAAA,EAAD,UACC,qDAMH,oBAAIE,UAAU,aAAd,SACED,EAAMkB,MAAME,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAECR,GAAIQ,EAAKR,GACTP,MAAOe,EAAKf,MACZS,KAAMM,EAAKN,KACXC,WAAYK,EAAKC,OAAOH,QAJnBE,EAAKR,U,QCeAU,UA7BD,WAAO,IAAD,EACmCC,cAA9CC,EADW,EACXA,UAAWC,EADA,EACAA,MAAOC,EADP,EACOA,YAAaC,EADpB,EACoBA,WADpB,EAEmBC,qBAFnB,mBAEZC,EAFY,KAECC,EAFD,KAgBnB,OAZAC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,+EAEMN,EACrBb,mCAHe,OAEVoB,EAFU,OAKhBH,EAAeG,EAAQC,OALP,uGAAH,qDAQfC,KACE,CAACT,IAGH,eAAC,IAAMU,SAAP,WACC,cAACC,EAAA,EAAD,CAAYZ,MAAOA,EAAOa,QAASX,IAClCH,GACA,qBAAKxB,UAAU,SAAf,SACC,cAACuC,EAAA,EAAD,OAGAf,GAAaK,GAAe,cAAC,EAAD,CAAWZ,MAAOY","file":"static/js/8.6045e940.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n\treturn (\r\n\t\t<div className={`card ${props.className}`} style={props.style}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = (props) => {\r\n\treturn (\r\n\t\t<div className={`avatar ${props.className}`} style={props.style}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={props.image}\r\n\t\t\t\talt={props.alt}\r\n\t\t\t\tstyle={{ width: props.width, height: props.width }}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './UserItem.css';\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\n\r\nconst UserItem = (props) => {\r\n\treturn (\r\n\t\t<li className=\"user-item\">\r\n\t\t\t<Card className=\"user-item__content\" style={{ padding: 0 }}>\r\n\t\t\t\t<Link to={`/${props.id}/places`}>\r\n\t\t\t\t\t<div className=\"user-item__image\">\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\timage={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n\t\t\t\t\t\t\talt={props.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"user-item__info\">\r\n\t\t\t\t\t\t<h2>{props.name}</h2>\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t{props.placeCount}{' '}\r\n\t\t\t\t\t\t\t{props.placeCount === 1 ? 'Place' : 'Places'}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\n\r\nimport './UsersList.css';\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\n\r\nconst UsersList = (props) => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn (\r\n\t\t\t<div className=\"center\">\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<h2>No users found.</h2>\r\n\t\t\t\t</Card>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<ul className=\"users-list\">\r\n\t\t\t{props.items.map((user) => (\r\n\t\t\t\t<UserItem\r\n\t\t\t\t\tkey={user.id}\r\n\t\t\t\t\tid={user.id}\r\n\t\t\t\t\timage={user.image}\r\n\t\t\t\t\tname={user.name}\r\n\t\t\t\t\tplaceCount={user.places.length}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport UsersList from '../components/UsersList';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\tconst [loadedUsers, setLoadedUsers] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchUser = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst resData = await sendRequest(\r\n\t\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/users'\r\n\t\t\t\t);\r\n\t\t\t\tsetLoadedUsers(resData.users);\r\n\t\t\t} catch (err) {}\r\n\t\t};\r\n\t\tfetchUser();\r\n\t}, [sendRequest]);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError} />\r\n\t\t\t{isLoading && (\r\n\t\t\t\t<div className=\"center\">\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}